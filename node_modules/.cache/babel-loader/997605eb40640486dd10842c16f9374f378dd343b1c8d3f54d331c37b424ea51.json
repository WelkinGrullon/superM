{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nexport default function useFetch(baseUrl) {\n  _s();\n  const [loading, setLoading] = useState(true);\n  function get(url) {\n    return new Promise((resolve, reject) => {\n      fetch(baseUrl + url).then(response => response.json()).then(data => {\n        if (!data) {\n          setLoading(false);\n          return reject(data);\n        }\n        setLoading(false);\n        resolve(data);\n      }).catch(error => {\n        setLoading(false);\n        reject(error);\n      });\n    });\n  }\n  function post(url, body) {\n    return new Promise((resolve, reject) => {\n      fetch(baseUrl + url, {\n        ...{\n          method: \"post\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        }\n      }).then(response => response.json()).then(data => {\n        if (!data) {\n          setLoading(false);\n          return reject(data);\n        }\n        setLoading(false);\n        resolve(data);\n      }).catch(error => {\n        setLoading(false);\n        reject(error);\n      });\n    });\n  }\n  return {\n    get,\n    post,\n    loading\n  };\n}\n_s(useFetch, \"awoWwSKBZAy48DVUNX9vIFbdsbI=\");","map":{"version":3,"names":["useState","useFetch","baseUrl","loading","setLoading","get","url","Promise","resolve","reject","fetch","then","response","json","data","catch","error","post","body","method","headers","JSON","stringify"],"sources":["/home/welkinalbertowa/projects/superm-solution-react-18-useFetch/src/useFetch.js"],"sourcesContent":["import { useState } from \"react\";\n\nexport default function useFetch(baseUrl) {\n  const [loading, setLoading] = useState(true);\n\n  function get(url) {\n    return new Promise((resolve, reject) => {\n      fetch(baseUrl + url)\n        .then((response) => response.json())\n        .then((data) => {\n          if (!data) {\n            setLoading(false);\n            return reject(data);\n          }\n          setLoading(false);\n          resolve(data);\n        })\n        .catch((error) => {\n          setLoading(false);\n          reject(error);\n        });\n    });\n  }\n\n  function post(url, body) {\n    return new Promise((resolve, reject) => {\n      fetch(baseUrl + url, {\n        ...{\n          method: \"post\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(body),\n        },\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          if (!data) {\n            setLoading(false);\n            return reject(data);\n          }\n          setLoading(false);\n          resolve(data);\n        })\n        .catch((error) => {\n          setLoading(false);\n          reject(error);\n        });\n    });\n  }\n\n  return { get, post, loading };\n}\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,eAAe,SAASC,QAAQ,CAACC,OAAO,EAAE;EAAA;EACxC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EAE5C,SAASK,GAAG,CAACC,GAAG,EAAE;IAChB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtCC,KAAK,CAACR,OAAO,GAAGI,GAAG,CAAC,CACjBK,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;QACd,IAAI,CAACA,IAAI,EAAE;UACTV,UAAU,CAAC,KAAK,CAAC;UACjB,OAAOK,MAAM,CAACK,IAAI,CAAC;QACrB;QACAV,UAAU,CAAC,KAAK,CAAC;QACjBI,OAAO,CAACM,IAAI,CAAC;MACf,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChBZ,UAAU,CAAC,KAAK,CAAC;QACjBK,MAAM,CAACO,KAAK,CAAC;MACf,CAAC,CAAC;IACN,CAAC,CAAC;EACJ;EAEA,SAASC,IAAI,CAACX,GAAG,EAAEY,IAAI,EAAE;IACvB,OAAO,IAAIX,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtCC,KAAK,CAACR,OAAO,GAAGI,GAAG,EAAE;QACnB,GAAG;UACDa,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDF,IAAI,EAAEG,IAAI,CAACC,SAAS,CAACJ,IAAI;QAC3B;MACF,CAAC,CAAC,CACCP,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;QACd,IAAI,CAACA,IAAI,EAAE;UACTV,UAAU,CAAC,KAAK,CAAC;UACjB,OAAOK,MAAM,CAACK,IAAI,CAAC;QACrB;QACAV,UAAU,CAAC,KAAK,CAAC;QACjBI,OAAO,CAACM,IAAI,CAAC;MACf,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChBZ,UAAU,CAAC,KAAK,CAAC;QACjBK,MAAM,CAACO,KAAK,CAAC;MACf,CAAC,CAAC;IACN,CAAC,CAAC;EACJ;EAEA,OAAO;IAAEX,GAAG;IAAEY,IAAI;IAAEd;EAAQ,CAAC;AAC/B;AAAC,GAlDuBF,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}